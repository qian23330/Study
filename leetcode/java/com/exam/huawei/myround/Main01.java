package com.exam.huawei.myround;

import java.util.*;

/*
01 二叉树消消乐
给定原始二叉树和参照二叉树(输入的二叉树均为满二叉树，二叉树节点的值范围为[1,1000]，二叉树的深度不超过1000)，
现对原始二叉树和参照二叉树中相同层级目值相同的节点进行消除、消除规则为原始叉树和参照二叉树中存在多个值相同的节点只能消除等数量的、消除后的节点变为无效节点，
请按节点值出现频率从高到低输出消除后原始二叉树中有效节点的值(如果原始二叉树消除后没有有效节点返回0)。

解答要求
时间限制:C/C++1000ms,其他语言:2000ms内存限制: C/C++256MB,其他语言:512MB
输入
原始二叉树中的节点个数
原始二叉树
参照二叉树中的节点个数
参照二叉树
输出
原始二叉树中有效节点的值，按出现频率从高到低排序(相同频率的值按大小排序)，相同频率的值按降序排列。

样例1
输入:
7
1 3 3 3 4 5 6
3
2 3 4
输出:
36541
 */
public class Main01 {
    public static void main(String[] args) {

    }
}
